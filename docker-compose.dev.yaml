services:
  app:
    build:
      context: .
      dockerfile: images/vulkan-server-app/Dockerfile
      args:
        PYTHON_VERSION: "3.12"
    init: true
    env_file:
      - config/active/app.env
      - config/active/.env
      - config/active/gcp.env
    ports:
      - "6001:6001"
    depends_on:
      app-db:
        condition: service_healthy
  app-db:
    image: postgres:16.3
    env_file:
      - config/active/app-db.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - postgres_data_app_db:/var/lib/postgresql/data
  # dagster:
  #   build:
  #     context: .
  #     dockerfile: images/dagster.Dockerfile
  #     args:
  #       PYTHON_VERSION: "3.12"
  #       DAGSTER_HOME: /opt/dagster
  #       VULKAN_HOME: /opt/vulkan
  #       VULKAN_SERVER_PATH: /opt/server
  #       VULKAN_SCRIPTS_PATH: /opt/scripts
  #       DAGSTER_PORT: 3000
  #       VULKAN_PORT: 3001
  #   init: true
  #   ports:
  #     - "3000:3000"
  #     - "3001:3001"
  #   env_file:
  #     - config/active/dagster.env
  #     - config/active/.env
  #   depends_on:
  #     dagster-db:
  #       condition: service_healthy
  #   volumes:
  #     - dagster_vulkan_home:/opt/vulkan
  # dagster-db:
  #   build:
  #     context: .
  #     dockerfile: images/dagster-db/Dockerfile
  #     args:
  #       POSTGRES_VERSION: "16.3"
  #   restart: always
  #   env_file:
  #     - config/active/dagster-db.env
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
  #       ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10
  #   volumes:
  #     - postgres_data_dagster_db:/var/lib/postgresql/data
  hatchet:
    build:
      context: .
      dockerfile: images/hatchet.Dockerfile
      args:
        PYTHON_VERSION: "3.12"
        HATCHET_HOME: /opt/hatchet
        VULKAN_HOME: /opt/vulkan
        VULKAN_SERVER_PATH: /opt/server
        VULKAN_SCRIPTS_PATH: /opt/scripts
        VULKAN_PORT: 3000
    init: true
    ports:
      - "3000:3000"
    env_file:
      - config/active/hatchet.env
    volumes:
      - hatchet_vulkan_home:/opt/vulkan
  vulkan-web-app:
    build:
      context: .
      dockerfile: images/vulkan-web-app.Dockerfile
      args:
        PYTHON_VERSION: "3.12"
        NEXT_PUBLIC_VULKAN_SERVER_URL: "http://app:6001"
    ports:
      - "3003:3000"
  # Mock services
  testdata:
    build:
      context: .
      dockerfile: images/test-data-server/Dockerfile
      args:
        PYTHON_VERSION: "3.12"
    ports:
      - "5001:5000"

volumes:
  postgres_data_app_db:
  postgres_data_dagster_db:
  dagster_vulkan_home:
  hatchet_vulkan_home: