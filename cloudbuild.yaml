steps:
  - name: "python:3.12"
    entrypoint: python
    args: ['-m', 'pip', 'install', '--upgrade',  'pip', 'build', 'twine', 'keyrings.google-artifactregistry-auth', '--user']

  - name: "python:3.12"
    entrypoint: python
    args: ['-m', 'build', 'vulkan-public']

  - name: "python:3.12"
    entrypoint: python
    args: ['-m', 'build', 'vulkan']
  
  - name: "python:3.12"
    entrypoint: python
    args:
    - '-m'
    - 'twine'
    - 'upload'
    - '--skip-existing'
    - '--repository-url'
    - 'https://${_LOCATION}-python.pkg.dev/$PROJECT_ID/${_REPOSITORY}/'
    - '/workspace/vulkan-public/dist/*'
    - '/workspace/vulkan/dist/*'
  
  - name: "python:3.12"
    id: "python-install"
    entrypoint: python
    args:
    - '-m'
    - 'pip'
    - 'install'
    - './vulkan-public'
    - './vulkan'
    - './vulkan-server'
    - '--user'
    waitFor: []
  
  - name: "python:3.12"
    id: 'openapi-generate-spec'
    entrypoint: python
    args:
    - 'scripts/export-openapi.py'
    - '--out'
    - '/workspace/generated/openapi.json'
    waitFor: ["python-install"]
  

  - name: 'gcr.io/cloud-builders/docker'
    id: 'openapi-generate-ts'
    args:
    - 'run'
    - 'openapitools/openapi-generator-cli'
    - 'generate'
    - '-v'
    - '/workspace:/local'
    - "-i"
    - "/local/generated/openapi.json"
    - '-o'
    - '/local/generated/ts/'
    - '-g'
    - 'typescript'
    - '--model-package'
    - 'vulkan-server-models'
    waitFor: ["openapi-generate-spec"]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'base-image'
    args: [
        'build',
        '-t',
        '${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/${_BASE_IMAGE_NAME}:latest',
        '-f',
        '/workspace/images/beam/base.Dockerfile',
        '.'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    id: 'metrics-image'
    args: [
        'build',
        '-t',
        '${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/metrics-pipeline:latest',
        '-f',
        '/workspace/images/beam/metrics.Dockerfile',
        '--build-arg',
        'BASE_IMAGE_NAME=${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/${_BASE_IMAGE_NAME}:latest',
        '.'
    ]
    waitFor:
      - 'base-image'

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "build-metrics-flex-template"
    args: [
        "gcloud",
        "dataflow",
        "flex-template",
        "build",
        "gs://${_ASSETS_BUCKET}/build-assets/flex-template/metrics-pipeline.json",
        "--image",
        '${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/metrics-pipeline:latest',
        "--sdk-language",
        "PYTHON",
        "--project",
        "${PROJECT_ID}",
    ]
    waitFor: ["metrics-image"]

substitutions:
  _BASE_IMAGE_NAME: 'vulkan-beam-base'

images:
  - '${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/${_BASE_IMAGE_NAME}:latest'
  - '${_DOCKER_REPOSITORY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_DOCKER_REPOSITORY_NAME}/metrics-pipeline:latest'

options:
  logging: CLOUD_LOGGING_ONLY
