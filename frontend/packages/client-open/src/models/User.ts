/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface User
 */
export interface User {
  /**
   *
   * @type {string}
   * @memberof User
   */
  user_auth_id: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  email: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof User
   */
  user_id: string;
  /**
   *
   * @type {Date}
   * @memberof User
   */
  created_at: Date;
  /**
   *
   * @type {Date}
   * @memberof User
   */
  last_updated_at: Date;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
  if (!("user_auth_id" in value) || value["user_auth_id"] === undefined)
    return false;
  if (!("email" in value) || value["email"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("user_id" in value) || value["user_id"] === undefined) return false;
  if (!("created_at" in value) || value["created_at"] === undefined)
    return false;
  if (!("last_updated_at" in value) || value["last_updated_at"] === undefined)
    return false;
  return true;
}

export function UserFromJSON(json: any): User {
  return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): User {
  if (json == null) {
    return json;
  }
  return {
    user_auth_id: json["user_auth_id"],
    email: json["email"],
    name: json["name"],
    user_id: json["user_id"],
    created_at: new Date(json["created_at"]),
    last_updated_at: new Date(json["last_updated_at"]),
  };
}

export function UserToJSON(json: any): User {
  return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(
  value?: User | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    user_auth_id: value["user_auth_id"],
    email: value["email"],
    name: value["name"],
    user_id: value["user_id"],
    created_at: value["created_at"].toISOString(),
    last_updated_at: value["last_updated_at"].toISOString(),
  };
}
