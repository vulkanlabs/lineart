/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Event } from "./Event";
import {
  EventFromJSON,
  EventFromJSONTyped,
  EventToJSON,
  EventToJSONTyped,
} from "./Event";

/**
 *
 * @export
 * @interface LogEntry
 */
export interface LogEntry {
  /**
   *
   * @type {Date}
   * @memberof LogEntry
   */
  timestamp: Date;
  /**
   *
   * @type {string}
   * @memberof LogEntry
   */
  step_key: string | null;
  /**
   *
   * @type {string}
   * @memberof LogEntry
   */
  source: string;
  /**
   *
   * @type {Event}
   * @memberof LogEntry
   */
  event: Event;
}

/**
 * Check if a given object implements the LogEntry interface.
 */
export function instanceOfLogEntry(value: object): value is LogEntry {
  if (!("timestamp" in value) || value["timestamp"] === undefined) return false;
  if (!("step_key" in value) || value["step_key"] === undefined) return false;
  if (!("source" in value) || value["source"] === undefined) return false;
  if (!("event" in value) || value["event"] === undefined) return false;
  return true;
}

export function LogEntryFromJSON(json: any): LogEntry {
  return LogEntryFromJSONTyped(json, false);
}

export function LogEntryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LogEntry {
  if (json == null) {
    return json;
  }
  return {
    timestamp: new Date(json["timestamp"]),
    step_key: json["step_key"],
    source: json["source"],
    event: EventFromJSON(json["event"]),
  };
}

export function LogEntryToJSON(json: any): LogEntry {
  return LogEntryToJSONTyped(json, false);
}

export function LogEntryToJSONTyped(
  value?: LogEntry | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    timestamp: value["timestamp"].toISOString(),
    step_key: value["step_key"],
    source: value["source"],
    event: EventToJSON(value["event"]),
  };
}
