/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Value } from "./Value";
import {
  ValueFromJSON,
  ValueFromJSONTyped,
  ValueToJSON,
  ValueToJSONTyped,
} from "./Value";

/**
 *
 * @export
 * @interface DataSourceEnvVar
 */
export interface DataSourceEnvVar {
  /**
   *
   * @type {string}
   * @memberof DataSourceEnvVar
   */
  name: string;
  /**
   *
   * @type {Value}
   * @memberof DataSourceEnvVar
   */
  value?: Value | null;
  /**
   *
   * @type {Date}
   * @memberof DataSourceEnvVar
   */
  created_at?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof DataSourceEnvVar
   */
  last_updated_at?: Date | null;
}

/**
 * Check if a given object implements the DataSourceEnvVar interface.
 */
export function instanceOfDataSourceEnvVar(
  value: object,
): value is DataSourceEnvVar {
  if (!("name" in value) || value["name"] === undefined) return false;
  return true;
}

export function DataSourceEnvVarFromJSON(json: any): DataSourceEnvVar {
  return DataSourceEnvVarFromJSONTyped(json, false);
}

export function DataSourceEnvVarFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DataSourceEnvVar {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"],
    value: json["value"] == null ? undefined : ValueFromJSON(json["value"]),
    created_at:
      json["created_at"] == null ? undefined : new Date(json["created_at"]),
    last_updated_at:
      json["last_updated_at"] == null
        ? undefined
        : new Date(json["last_updated_at"]),
  };
}

export function DataSourceEnvVarToJSON(json: any): DataSourceEnvVar {
  return DataSourceEnvVarToJSONTyped(json, false);
}

export function DataSourceEnvVarToJSONTyped(
  value?: DataSourceEnvVar | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    value: ValueToJSON(value["value"]),
    created_at:
      value["created_at"] === null
        ? null
        : (value["created_at"] as any)?.toISOString(),
    last_updated_at:
      value["last_updated_at"] === null
        ? null
        : (value["last_updated_at"] as any)?.toISOString(),
  };
}
