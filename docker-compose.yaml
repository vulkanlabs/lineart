services:
  app:
    image: ghcr.io/vulkanlabs/app:latest
    init: true
    env_file:
      - config/active/app.env
      - config/active/.env
    ports:
      - "6001:6001"
    depends_on:
      app-db:
        condition: service_healthy
  app-db:
    image: postgres:16.3
    env_file:
      - config/active/app-db.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - postgres_data_app_db:/var/lib/postgresql/data
  dagster:
    image: ghcr.io/vulkanlabs/dagster:latest
    init: true
    env_file:
      - config/active/dagster.env
      - config/active/.env
    depends_on:
      dagster-db:
        condition: service_healthy
    volumes:
      - dagster_vulkan_home:/opt/vulkan
  dagster-db:
    image: ghcr.io/vulkanlabs/dagster-db:latest
    restart: always
    env_file:
      - config/active/dagster-db.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data_dagster_db:/var/lib/postgresql/data
  vulkan-web-app:
    image: ghcr.io/vulkanlabs/vulkan-web-app:latest
    ports:
      - "3003:3000"
  vulkan-agent:
    image: ghcr.io/vulkanlabs/vulkan-agent:latest
    init: true
    env_file:
      - config/active/vulkan-agent.env
      - config/active/.env
    ports:
      - "8001:8001"
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data_app_db:
  postgres_data_dagster_db:
  dagster_vulkan_home: