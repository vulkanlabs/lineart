/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunTimeParam } from './RunTimeParam';
import {
    RunTimeParamFromJSON,
    RunTimeParamFromJSONTyped,
    RunTimeParamToJSON,
    RunTimeParamToJSONTyped,
} from './RunTimeParam';
import type { EnvVarConfig } from './EnvVarConfig';
import {
    EnvVarConfigFromJSON,
    EnvVarConfigFromJSONTyped,
    EnvVarConfigToJSON,
    EnvVarConfigToJSONTyped,
} from './EnvVarConfig';
import type { HTTPSourceHeadersValueAnyOfInner } from './HTTPSourceHeadersValueAnyOfInner';
import {
    HTTPSourceHeadersValueAnyOfInnerFromJSON,
    HTTPSourceHeadersValueAnyOfInnerFromJSONTyped,
    HTTPSourceHeadersValueAnyOfInnerToJSON,
    HTTPSourceHeadersValueAnyOfInnerToJSONTyped,
} from './HTTPSourceHeadersValueAnyOfInner';

/**
 * 
 * @export
 * @interface HTTPSourceHeadersValue
 */
export interface HTTPSourceHeadersValue {
    /**
     * 
     * @type {string}
     * @memberof HTTPSourceHeadersValue
     */
    env: string;
    /**
     * 
     * @type {string}
     * @memberof HTTPSourceHeadersValue
     */
    param: string;
}

/**
 * Check if a given object implements the HTTPSourceHeadersValue interface.
 */
export function instanceOfHTTPSourceHeadersValue(value: object): value is HTTPSourceHeadersValue {
    if (!('env' in value) || value['env'] === undefined) return false;
    if (!('param' in value) || value['param'] === undefined) return false;
    return true;
}

export function HTTPSourceHeadersValueFromJSON(json: any): HTTPSourceHeadersValue {
    return HTTPSourceHeadersValueFromJSONTyped(json, false);
}

export function HTTPSourceHeadersValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTTPSourceHeadersValue {
    if (json == null) {
        return json;
    }
    return {
        
        'env': json['env'],
        'param': json['param'],
    };
}

export function HTTPSourceHeadersValueToJSON(json: any): HTTPSourceHeadersValue {
    return HTTPSourceHeadersValueToJSONTyped(json, false);
}

export function HTTPSourceHeadersValueToJSONTyped(value?: HTTPSourceHeadersValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'env': value['env'],
        'param': value['param'],
    };
}

