/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RunStatus } from './RunStatus';
import {
    RunStatusFromJSON,
    RunStatusFromJSONTyped,
    RunStatusToJSON,
    RunStatusToJSONTyped,
} from './RunStatus';

/**
 * 
 * @export
 * @interface BackfillStatus
 */
export interface BackfillStatus {
    /**
     * 
     * @type {string}
     * @memberof BackfillStatus
     */
    backfill_id: string;
    /**
     * 
     * @type {RunStatus}
     * @memberof BackfillStatus
     */
    status: RunStatus;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof BackfillStatus
     */
    config_variables: { [key: string]: any; } | null;
}



/**
 * Check if a given object implements the BackfillStatus interface.
 */
export function instanceOfBackfillStatus(value: object): value is BackfillStatus {
    if (!('backfill_id' in value) || value['backfill_id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('config_variables' in value) || value['config_variables'] === undefined) return false;
    return true;
}

export function BackfillStatusFromJSON(json: any): BackfillStatus {
    return BackfillStatusFromJSONTyped(json, false);
}

export function BackfillStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackfillStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'backfill_id': json['backfill_id'],
        'status': RunStatusFromJSON(json['status']),
        'config_variables': json['config_variables'],
    };
}

export function BackfillStatusToJSON(json: any): BackfillStatus {
    return BackfillStatusToJSONTyped(json, false);
}

export function BackfillStatusToJSONTyped(value?: BackfillStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'backfill_id': value['backfill_id'],
        'status': RunStatusToJSON(value['status']),
        'config_variables': value['config_variables'],
    };
}

