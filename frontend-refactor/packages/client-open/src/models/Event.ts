/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { DagsterLogDetails } from "./DagsterLogDetails";
import {
  DagsterLogDetailsFromJSON,
  DagsterLogDetailsFromJSONTyped,
  DagsterLogDetailsToJSON,
  DagsterLogDetailsToJSONTyped,
} from "./DagsterLogDetails";
import type { UserLogDetails } from "./UserLogDetails";
import {
  UserLogDetailsFromJSON,
  UserLogDetailsFromJSONTyped,
  UserLogDetailsToJSON,
  UserLogDetailsToJSONTyped,
} from "./UserLogDetails";

/**
 *
 * @export
 * @interface Event
 */
export interface Event {
  /**
   *
   * @type {string}
   * @memberof Event
   */
  log_type: string;
  /**
   *
   * @type {string}
   * @memberof Event
   */
  message: string;
  /**
   *
   * @type {string}
   * @memberof Event
   */
  level: string;
}

/**
 * Check if a given object implements the Event interface.
 */
export function instanceOfEvent(value: object): value is Event {
  if (!("log_type" in value) || value["log_type"] === undefined) return false;
  if (!("message" in value) || value["message"] === undefined) return false;
  if (!("level" in value) || value["level"] === undefined) return false;
  return true;
}

export function EventFromJSON(json: any): Event {
  return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Event {
  if (json == null) {
    return json;
  }
  return {
    log_type: json["log_type"],
    message: json["message"],
    level: json["level"],
  };
}

export function EventToJSON(json: any): Event {
  return EventToJSONTyped(json, false);
}

export function EventToJSONTyped(
  value?: Event | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    log_type: value["log_type"],
    message: value["message"],
    level: value["level"],
  };
}
