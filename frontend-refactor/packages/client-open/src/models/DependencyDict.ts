/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Dict representation of a Dependency object.
 * @export
 * @interface DependencyDict
 */
export interface DependencyDict {
  /**
   *
   * @type {string}
   * @memberof DependencyDict
   */
  node: string;
  /**
   *
   * @type {string}
   * @memberof DependencyDict
   */
  output: string | null;
  /**
   *
   * @type {string}
   * @memberof DependencyDict
   */
  key: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof DependencyDict
   */
  hierarchy: Array<string> | null;
}

/**
 * Check if a given object implements the DependencyDict interface.
 */
export function instanceOfDependencyDict(
  value: object,
): value is DependencyDict {
  if (!("node" in value) || value["node"] === undefined) return false;
  if (!("output" in value) || value["output"] === undefined) return false;
  if (!("key" in value) || value["key"] === undefined) return false;
  if (!("hierarchy" in value) || value["hierarchy"] === undefined) return false;
  return true;
}

export function DependencyDictFromJSON(json: any): DependencyDict {
  return DependencyDictFromJSONTyped(json, false);
}

export function DependencyDictFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DependencyDict {
  if (json == null) {
    return json;
  }
  return {
    node: json["node"],
    output: json["output"],
    key: json["key"],
    hierarchy: json["hierarchy"] == null ? null : json["hierarchy"],
  };
}

export function DependencyDictToJSON(json: any): DependencyDict {
  return DependencyDictToJSONTyped(json, false);
}

export function DependencyDictToJSONTyped(
  value?: DependencyDict | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    node: value["node"],
    output: value["output"],
    key: value["key"],
    hierarchy: value["hierarchy"],
  };
}
