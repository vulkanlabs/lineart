/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { RunStatus } from "./RunStatus";
import {
  RunStatusFromJSON,
  RunStatusFromJSONTyped,
  RunStatusToJSON,
  RunStatusToJSONTyped,
} from "./RunStatus";

/**
 *
 * @export
 * @interface BacktestMetrics
 */
export interface BacktestMetrics {
  /**
   *
   * @type {string}
   * @memberof BacktestMetrics
   */
  backtest_id: string;
  /**
   *
   * @type {RunStatus}
   * @memberof BacktestMetrics
   */
  status: RunStatus;
  /**
   *
   * @type {Array<{ [key: string]: any; }>}
   * @memberof BacktestMetrics
   */
  metrics?: Array<{ [key: string]: any }> | null;
}

/**
 * Check if a given object implements the BacktestMetrics interface.
 */
export function instanceOfBacktestMetrics(
  value: object,
): value is BacktestMetrics {
  if (!("backtest_id" in value) || value["backtest_id"] === undefined)
    return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  return true;
}

export function BacktestMetricsFromJSON(json: any): BacktestMetrics {
  return BacktestMetricsFromJSONTyped(json, false);
}

export function BacktestMetricsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BacktestMetrics {
  if (json == null) {
    return json;
  }
  return {
    backtest_id: json["backtest_id"],
    status: RunStatusFromJSON(json["status"]),
    metrics: json["metrics"] == null ? undefined : json["metrics"],
  };
}

export function BacktestMetricsToJSON(json: any): BacktestMetrics {
  return BacktestMetricsToJSONTyped(json, false);
}

export function BacktestMetricsToJSONTyped(
  value?: BacktestMetrics | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    backtest_id: value["backtest_id"],
    status: RunStatusToJSON(value["status"]),
    metrics: value["metrics"],
  };
}
