/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CachingTTL
 */
export interface CachingTTL {
    /**
     * 
     * @type {number}
     * @memberof CachingTTL
     */
    days?: number;
    /**
     * 
     * @type {number}
     * @memberof CachingTTL
     */
    hours?: number;
    /**
     * 
     * @type {number}
     * @memberof CachingTTL
     */
    minutes?: number;
    /**
     * 
     * @type {number}
     * @memberof CachingTTL
     */
    seconds?: number;
}

/**
 * Check if a given object implements the CachingTTL interface.
 */
export function instanceOfCachingTTL(value: object): value is CachingTTL {
    return true;
}

export function CachingTTLFromJSON(json: any): CachingTTL {
    return CachingTTLFromJSONTyped(json, false);
}

export function CachingTTLFromJSONTyped(json: any, ignoreDiscriminator: boolean): CachingTTL {
    if (json == null) {
        return json;
    }
    return {
        
        'days': json['days'] == null ? undefined : json['days'],
        'hours': json['hours'] == null ? undefined : json['hours'],
        'minutes': json['minutes'] == null ? undefined : json['minutes'],
        'seconds': json['seconds'] == null ? undefined : json['seconds'],
    };
}

export function CachingTTLToJSON(json: any): CachingTTL {
    return CachingTTLToJSONTyped(json, false);
}

export function CachingTTLToJSONTyped(value?: CachingTTL | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'days': value['days'],
        'hours': value['hours'],
        'minutes': value['minutes'],
        'seconds': value['seconds'],
    };
}

