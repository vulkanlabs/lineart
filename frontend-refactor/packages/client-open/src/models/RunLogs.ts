/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LogEntry } from './LogEntry';
import {
    LogEntryFromJSON,
    LogEntryFromJSONTyped,
    LogEntryToJSON,
    LogEntryToJSONTyped,
} from './LogEntry';

/**
 * 
 * @export
 * @interface RunLogs
 */
export interface RunLogs {
    /**
     * 
     * @type {string}
     * @memberof RunLogs
     */
    run_id: string;
    /**
     * 
     * @type {string}
     * @memberof RunLogs
     */
    status: string;
    /**
     * 
     * @type {Date}
     * @memberof RunLogs
     */
    last_updated_at: Date;
    /**
     * 
     * @type {Array<LogEntry>}
     * @memberof RunLogs
     */
    logs: Array<LogEntry>;
}

/**
 * Check if a given object implements the RunLogs interface.
 */
export function instanceOfRunLogs(value: object): value is RunLogs {
    if (!('run_id' in value) || value['run_id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('last_updated_at' in value) || value['last_updated_at'] === undefined) return false;
    if (!('logs' in value) || value['logs'] === undefined) return false;
    return true;
}

export function RunLogsFromJSON(json: any): RunLogs {
    return RunLogsFromJSONTyped(json, false);
}

export function RunLogsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RunLogs {
    if (json == null) {
        return json;
    }
    return {
        
        'run_id': json['run_id'],
        'status': json['status'],
        'last_updated_at': (new Date(json['last_updated_at'])),
        'logs': ((json['logs'] as Array<any>).map(LogEntryFromJSON)),
    };
}

export function RunLogsToJSON(json: any): RunLogs {
    return RunLogsToJSONTyped(json, false);
}

export function RunLogsToJSONTyped(value?: RunLogs | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'run_id': value['run_id'],
        'status': value['status'],
        'last_updated_at': ((value['last_updated_at']).toISOString()),
        'logs': ((value['logs'] as Array<any>).map(LogEntryToJSON)),
    };
}

