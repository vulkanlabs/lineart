/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { JobStatus } from "./JobStatus";
import {
  JobStatusFromJSON,
  JobStatusFromJSONTyped,
  JobStatusToJSON,
  JobStatusToJSONTyped,
} from "./JobStatus";
import type { BackfillStatus } from "./BackfillStatus";
import {
  BackfillStatusFromJSON,
  BackfillStatusFromJSONTyped,
  BackfillStatusToJSON,
  BackfillStatusToJSONTyped,
} from "./BackfillStatus";

/**
 *
 * @export
 * @interface BacktestStatus
 */
export interface BacktestStatus {
  /**
   *
   * @type {string}
   * @memberof BacktestStatus
   */
  backtest_id: string;
  /**
   *
   * @type {JobStatus}
   * @memberof BacktestStatus
   */
  status: JobStatus;
  /**
   *
   * @type {Array<BackfillStatus>}
   * @memberof BacktestStatus
   */
  backfills: Array<BackfillStatus>;
}

/**
 * Check if a given object implements the BacktestStatus interface.
 */
export function instanceOfBacktestStatus(
  value: object,
): value is BacktestStatus {
  if (!("backtest_id" in value) || value["backtest_id"] === undefined)
    return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("backfills" in value) || value["backfills"] === undefined) return false;
  return true;
}

export function BacktestStatusFromJSON(json: any): BacktestStatus {
  return BacktestStatusFromJSONTyped(json, false);
}

export function BacktestStatusFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BacktestStatus {
  if (json == null) {
    return json;
  }
  return {
    backtest_id: json["backtest_id"],
    status: JobStatusFromJSON(json["status"]),
    backfills: (json["backfills"] as Array<any>).map(BackfillStatusFromJSON),
  };
}

export function BacktestStatusToJSON(json: any): BacktestStatus {
  return BacktestStatusToJSONTyped(json, false);
}

export function BacktestStatusToJSONTyped(
  value?: BacktestStatus | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    backtest_id: value["backtest_id"],
    status: JobStatusToJSON(value["status"]),
    backfills: (value["backfills"] as Array<any>).map(BackfillStatusToJSON),
  };
}
