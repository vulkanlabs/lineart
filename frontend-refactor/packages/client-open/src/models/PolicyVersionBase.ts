/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PolicyDefinitionDictInput } from './PolicyDefinitionDictInput';
import {
    PolicyDefinitionDictInputFromJSON,
    PolicyDefinitionDictInputFromJSONTyped,
    PolicyDefinitionDictInputToJSON,
    PolicyDefinitionDictInputToJSONTyped,
} from './PolicyDefinitionDictInput';
import type { UIMetadata } from './UIMetadata';
import {
    UIMetadataFromJSON,
    UIMetadataFromJSONTyped,
    UIMetadataToJSON,
    UIMetadataToJSONTyped,
} from './UIMetadata';

/**
 * 
 * @export
 * @interface PolicyVersionBase
 */
export interface PolicyVersionBase {
    /**
     * 
     * @type {string}
     * @memberof PolicyVersionBase
     */
    alias: string | null;
    /**
     * 
     * @type {PolicyDefinitionDictInput}
     * @memberof PolicyVersionBase
     */
    spec: PolicyDefinitionDictInput;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof PolicyVersionBase
     */
    input_schema?: { [key: string]: string; } | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PolicyVersionBase
     */
    requirements?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: UIMetadata; }}
     * @memberof PolicyVersionBase
     */
    ui_metadata?: { [key: string]: UIMetadata; } | null;
}

/**
 * Check if a given object implements the PolicyVersionBase interface.
 */
export function instanceOfPolicyVersionBase(value: object): value is PolicyVersionBase {
    if (!('alias' in value) || value['alias'] === undefined) return false;
    if (!('spec' in value) || value['spec'] === undefined) return false;
    return true;
}

export function PolicyVersionBaseFromJSON(json: any): PolicyVersionBase {
    return PolicyVersionBaseFromJSONTyped(json, false);
}

export function PolicyVersionBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyVersionBase {
    if (json == null) {
        return json;
    }
    return {
        
        'alias': json['alias'],
        'spec': PolicyDefinitionDictInputFromJSON(json['spec']),
        'input_schema': json['input_schema'] == null ? undefined : json['input_schema'],
        'requirements': json['requirements'] == null ? undefined : json['requirements'],
        'ui_metadata': json['ui_metadata'] == null ? undefined : (mapValues(json['ui_metadata'], UIMetadataFromJSON)),
    };
}

export function PolicyVersionBaseToJSON(json: any): PolicyVersionBase {
    return PolicyVersionBaseToJSONTyped(json, false);
}

export function PolicyVersionBaseToJSONTyped(value?: PolicyVersionBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'alias': value['alias'],
        'spec': PolicyDefinitionDictInputToJSON(value['spec']),
        'input_schema': value['input_schema'],
        'requirements': value['requirements'],
        'ui_metadata': value['ui_metadata'] == null ? undefined : (mapValues(value['ui_metadata'], UIMetadataToJSON)),
    };
}

