/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Value } from './Value';
import {
    ValueFromJSON,
    ValueFromJSONTyped,
    ValueToJSON,
    ValueToJSONTyped,
} from './Value';

/**
 * 
 * @export
 * @interface ConfigurationVariablesBase
 */
export interface ConfigurationVariablesBase {
    /**
     * 
     * @type {string}
     * @memberof ConfigurationVariablesBase
     */
    name: string;
    /**
     * 
     * @type {Value}
     * @memberof ConfigurationVariablesBase
     */
    value?: Value | null;
}

/**
 * Check if a given object implements the ConfigurationVariablesBase interface.
 */
export function instanceOfConfigurationVariablesBase(value: object): value is ConfigurationVariablesBase {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ConfigurationVariablesBaseFromJSON(json: any): ConfigurationVariablesBase {
    return ConfigurationVariablesBaseFromJSONTyped(json, false);
}

export function ConfigurationVariablesBaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigurationVariablesBase {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'value': json['value'] == null ? undefined : ValueFromJSON(json['value']),
    };
}

export function ConfigurationVariablesBaseToJSON(json: any): ConfigurationVariablesBase {
    return ConfigurationVariablesBaseToJSONTyped(json, false);
}

export function ConfigurationVariablesBaseToJSONTyped(value?: ConfigurationVariablesBase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'value': ValueToJSON(value['value']),
    };
}

