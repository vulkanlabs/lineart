/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { JobStatus } from "./JobStatus";
import {
  JobStatusFromJSON,
  JobStatusFromJSONTyped,
  JobStatusToJSON,
  JobStatusToJSONTyped,
} from "./JobStatus";

/**
 *
 * @export
 * @interface Backtest
 */
export interface Backtest {
  /**
   *
   * @type {string}
   * @memberof Backtest
   */
  backtest_id: string;
  /**
   *
   * @type {string}
   * @memberof Backtest
   */
  policy_version_id: string;
  /**
   *
   * @type {string}
   * @memberof Backtest
   */
  input_file_id: string;
  /**
   *
   * @type {Array<{ [key: string]: any; }>}
   * @memberof Backtest
   */
  environments: Array<{ [key: string]: any }>;
  /**
   *
   * @type {JobStatus}
   * @memberof Backtest
   */
  status: JobStatus;
  /**
   *
   * @type {boolean}
   * @memberof Backtest
   */
  calculate_metrics: boolean;
  /**
   *
   * @type {string}
   * @memberof Backtest
   */
  target_column: string | null;
  /**
   *
   * @type {string}
   * @memberof Backtest
   */
  time_column: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof Backtest
   */
  group_by_columns: Array<string> | null;
  /**
   *
   * @type {Date}
   * @memberof Backtest
   */
  created_at: Date;
  /**
   *
   * @type {Date}
   * @memberof Backtest
   */
  last_updated_at: Date;
}

/**
 * Check if a given object implements the Backtest interface.
 */
export function instanceOfBacktest(value: object): value is Backtest {
  if (!("backtest_id" in value) || value["backtest_id"] === undefined)
    return false;
  if (
    !("policy_version_id" in value) ||
    value["policy_version_id"] === undefined
  )
    return false;
  if (!("input_file_id" in value) || value["input_file_id"] === undefined)
    return false;
  if (!("environments" in value) || value["environments"] === undefined)
    return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  if (
    !("calculate_metrics" in value) ||
    value["calculate_metrics"] === undefined
  )
    return false;
  if (!("target_column" in value) || value["target_column"] === undefined)
    return false;
  if (!("time_column" in value) || value["time_column"] === undefined)
    return false;
  if (!("group_by_columns" in value) || value["group_by_columns"] === undefined)
    return false;
  if (!("created_at" in value) || value["created_at"] === undefined)
    return false;
  if (!("last_updated_at" in value) || value["last_updated_at"] === undefined)
    return false;
  return true;
}

export function BacktestFromJSON(json: any): Backtest {
  return BacktestFromJSONTyped(json, false);
}

export function BacktestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Backtest {
  if (json == null) {
    return json;
  }
  return {
    backtest_id: json["backtest_id"],
    policy_version_id: json["policy_version_id"],
    input_file_id: json["input_file_id"],
    environments: json["environments"],
    status: JobStatusFromJSON(json["status"]),
    calculate_metrics: json["calculate_metrics"],
    target_column: json["target_column"],
    time_column: json["time_column"],
    group_by_columns:
      json["group_by_columns"] == null ? null : json["group_by_columns"],
    created_at: new Date(json["created_at"]),
    last_updated_at: new Date(json["last_updated_at"]),
  };
}

export function BacktestToJSON(json: any): Backtest {
  return BacktestToJSONTyped(json, false);
}

export function BacktestToJSONTyped(
  value?: Backtest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    backtest_id: value["backtest_id"],
    policy_version_id: value["policy_version_id"],
    input_file_id: value["input_file_id"],
    environments: value["environments"],
    status: JobStatusToJSON(value["status"]),
    calculate_metrics: value["calculate_metrics"],
    target_column: value["target_column"],
    time_column: value["time_column"],
    group_by_columns: value["group_by_columns"],
    created_at: value["created_at"].toISOString(),
    last_updated_at: value["last_updated_at"].toISOString(),
  };
}
