name: Build Python SDK (Speakeasy)

on:
  push:
    # Use ** so branches with slashes (feature/x) are included.
    branches: ["**"]
  workflow_dispatch:
    inputs:
      force:
        description: Force regeneration of the SDK (bypass cache)
        type: boolean
        default: false
      set_version:
        description: Optionally set a specific SDK version (e.g. 0.3.0)
        type: string
        required: false
      runner:
        description: Runner to use (override default ubuntu-latest)
        type: string
        default: ubuntu-latest
      mode:
        description: Speakeasy generation mode (e.g. pr, direct, test)
        type: string
        default: pr

permissions:
  contents: read
  packages: write
  # allow PR creation to downstream repo if action does that
  pull-requests: write

jobs:
  build_and_generate_python_sdk:
    name: Generate OpenAPI + Python SDK
    # NOTE: Linter flagged dynamic expression form; using static runner. Change manually if custom runner needed.
    runs-on: ubuntu-latest
    env:
      OPENAPI_SPEC_PATH: generated/openapi.json
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install uv & sync deps
        run: |
          set -euxo pipefail
          pip install 'uv<0.8'
          uv sync

      - name: Generate OpenAPI spec
        run: |
            set -euxo pipefail
            mkdir -p generated
            uv run python scripts/export-openapi.py --out "$OPENAPI_SPEC_PATH"
            test -s "$OPENAPI_SPEC_PATH"

      - name: Upload spec artifact (debug/traceability)
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: ${{ env.OPENAPI_SPEC_PATH }}
          if-no-files-found: error

      - name: Generate SDK (Python)
        uses: speakeasy-api/sdk-generation-action@v15
        with:
          # Required secrets passed implicitly via env/secrets below
          # Path (or URL) to the OpenAPI document.
          openapi_doc_location: ${{ env.OPENAPI_SPEC_PATH }}
          language: python
          force: ${{ github.event.inputs.force }}
          set_version: ${{ github.event.inputs.set_version }}
          mode: ${{ github.event.inputs.mode }}
          speakeasy_version: latest
          github_repository: vulkanlabs/vulkan-client
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}
