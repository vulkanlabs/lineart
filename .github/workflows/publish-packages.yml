name: Publish Packages to GitHub Packages

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string
      node_version:
        description: 'Node version to use'
        required: false
        default: '23'
        type: string
      npm_registry_url:
        description: 'NPM registry URL'
        required: false
        default: 'https://npm.pkg.github.com'
        type: string
      force_publish:
        description: 'Force publish packages'
        required: false
        default: false
        type: boolean

jobs:
  generate-openapi-spec:
    uses: ./.github/workflows/openapi-build-spec.yml

  publish-frontend-packages:
    runs-on: ubuntu-latest
    needs: generate-openapi-spec
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Download OpenAPI spec
        uses: actions/download-artifact@v5
        with:
          name: spec
          path: ${{ github.workspace }}/generated/

      - name: Generate new client
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/local" \
            openapitools/openapi-generator-cli generate \
            -i /local/generated/openapi.json \
            -g typescript-fetch \
            --additional-properties=modelPropertyNaming=original \
            -o /local/generated/ts
            
      - name: Copy generated files
        run: |
          set -x
          mkdir -p ${{ github.workspace }}/frontend/packages/client-open/src/
          cp -r ${{ github.workspace }}/generated/ts/* ${{ github.workspace }}/frontend/packages/client-open/src/
          ls -la ${{ github.workspace }}/frontend/packages/client-open/src/

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          registry-url: 'https://npm.pkg.github.com'

      # Build & Publish Frontend Packages
      - name: Build all packages
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Publish development version of packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd frontend/packages

          # Function to publish a package
          publish_package() {
            local package=$1
            echo "Publishing @vulkanlabs/$package..."
            cd $package

            # Check if package version already exists
            PACKAGE_NAME=$(node -p "require('./package.json').name")
            PACKAGE_VERSION="${{ inputs.version }}"

            if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" > /dev/null 2>&1; then
              echo "Package $PACKAGE_NAME@$PACKAGE_VERSION already exists, failing..."
              exit 1
            else
              npm publish
              echo "Published $PACKAGE_NAME@$PACKAGE_VERSION"
            fi

            cd ..
          }

          # Publish packages
          for package in client-open api-utils base; do
            publish_package $package
          done