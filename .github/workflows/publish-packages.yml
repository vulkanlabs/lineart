name: Publish Packages to GitHub Packages

on:
  push:
    branches: [main]
    paths:
      - 'frontend/packages/**'
      - '.github/workflows/publish-packages.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/packages/**'
      - '.github/workflows/publish-packages.yml'
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish packages'
        required: false
        default: false
        type: boolean

jobs:
  publish-python-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies with uv
        run: |
          set -x 
          pip install 'uv<0.8'
          uv sync

      - name: Build Python Packages
        run: |
          uv build --wheel --all

      - name: Publish Python Packages
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist
          if-no-files-found: error

  generate-openapi-spec:
    uses: ./.github/workflows/openapi-build-spec.yml

  publish-frontend-packages:
    runs-on: ubuntu-latest
    needs: generate-openapi-spec
    steps:
      - uses: actions/checkout@v4

      - name: Download OpenAPI spec
        uses: actions/download-artifact@v5
        with:
          name: spec
          path: ${{ github.workspace }}/generated/

      - name: Generate new client
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/local" \
            openapitools/openapi-generator-cli generate \
            -i /local/generated/openapi.json \
            -g typescript-fetch \
            --additional-properties=modelPropertyNaming=original \
            -o /local/generated/ts
            
      - name: Copy generated files
        run: |
          set -x
          mkdir -p ${{ github.workspace }}/frontend/packages/client-open/src/
          cp -r ${{ github.workspace }}/generated/ts/* ${{ github.workspace }}/frontend/packages/client-open/src/
          ls -la ${{ github.workspace }}/frontend/packages/client-open/src/

      # Build & Publish Frontend Packages
      - name: Build all packages
        run: |
          cd frontend
          npm run build

      - name: Publish development version of packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Only publish development version of packages on non-main, non-release refs
        if: (github.event_name == 'push' && github.ref != 'refs/heads/main' && github.ref != 'refs/tags/v*')
        run: |
          cd frontend/packages

          # Function to publish a package
          publish_package() {
            local package=$1
            echo "Publishing @vulkanlabs/$package..."
            cd $package

            # Check if package version already exists
            PACKAGE_NAME=$(node -p "require('./package.json').name")
            PACKAGE_VERSION="${{ github.sha }}"

            if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" > /dev/null 2>&1; then
              echo "Package $PACKAGE_NAME@$PACKAGE_VERSION already exists, failing..."
              exit 1
            else
              npm publish
              echo "Published $PACKAGE_NAME@$PACKAGE_VERSION"
            fi

            cd ..
          }

          # Publish packages
          for package in client-open api-utils base; do
            publish_package $package
          done