name: Publish Packages to GitHub Packages

on:
  push:
    branches: [main]
    paths:
      - 'frontend/packages/**'
      - '.github/workflows/publish-packages.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/packages/**'
      - '.github/workflows/publish-packages.yml'
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish packages'
        required: false
        default: 'false'
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          
      - name: Install root dependencies
        run: |
          cd frontend
          npm ci
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies with uv
        run: |
          set -x 
          pip install 'uv<0.8'
          uv sync

      - name: Render OpenAPI Specification
        run: |
          uv run python scripts/export-openapi.py --out ./generated/openapi.json

      - name: Generate new client
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/local" \
            openapitools/openapi-generator-cli generate \
            -i /local/generated/openapi.json \
            -g typescript-fetch \
            --additional-properties=modelPropertyNaming=original \
            -o /local/generated/ts

      - name: Copy generated files
        run: |
          set -x
          mkdir -p ${{ github.workspace }}/frontend/packages/client-open/src/
          cp -r ${{ github.workspace }}/generated/ts/* ${{ github.workspace }}/frontend/packages/client-open/src/
          ls -la ${{ github.workspace }}/frontend/packages/client-open/src/

      - name: Build all packages
        run: |
          cd frontend
          npm run build
          
      - name: Publish packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_publish == 'true')
        run: |
          cd frontend/packages
          
          # Function to publish a package
          publish_package() {
            local package=$1
            echo "Publishing @vulkanlabs/$package..."
            cd $package
            
            # Check if package version already exists
            PACKAGE_NAME=$(node -p "require('./package.json').name")
            PACKAGE_VERSION=$(node -p "require('./package.json').version")
            
            if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" > /dev/null 2>&1; then
              echo "Package $PACKAGE_NAME@$PACKAGE_VERSION already exists, skipping..."
            else
              npm publish
              echo "Published $PACKAGE_NAME@$PACKAGE_VERSION"
            fi
            
            cd ..
          }
          
          # Publish packages
          for package in base api-utils client-open; do
            publish_package $package
          done