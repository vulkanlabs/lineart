# .github/workflows/docker-build.yml

name: Build and Push Docker Images to GHCR

on:
  workflow_call:
    inputs:
      python_version:
        description: 'Python version to use'
        required: false
        default: '3.12'
        type: string
      postgres_version:
        description: 'Postgres version to use'
        required: false
        default: '16.3'
        type: string
      force_publish:
        description: 'Force publish images'
        required: false
        default: false
        type: boolean

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN permissions to write to GitHub Packages (GHCR)
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false # Ensures that if one matrix job fails, others will continue
      matrix:
        image:
          - name: app
            dockerfile: ./images/vulkan-server-app/Dockerfile
            context: . 
            build_args: | 
              PYTHON_VERSION=${{ inputs.python_version }}
          - name: dagster 
            dockerfile: ./images/dagster.Dockerfile
            context: . 
            build_args: |
              PYTHON_VERSION=${{ inputs.python_version }}
              DAGSTER_HOME=/opt/dagster
              VULKAN_HOME=/opt/vulkan
              VULKAN_SERVER_PATH=/opt/server
              VULKAN_SCRIPTS_PATH=/opt/scripts
              DAGSTER_PORT=3000
              VULKAN_PORT=3001
          - name: dagster-db
            dockerfile: ./images/dagster-db/Dockerfile
            context: . 
            build_args: | 
              POSTGRES_VERSION=${{ inputs.postgres_version }}
          - name: vulkan-web-app
            dockerfile: ./images/vulkan-web-app.Dockerfile
            context: . 
            build_args: |
              PYTHON_VERSION=${{ inputs.python_version }}
              NEXT_PUBLIC_VULKAN_SERVER_URL=http://app:6001
            if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # This step checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # QEMU is useful for multi-platform builds.
      - name: Set up Docker Buildx
        id: buildx # Give the buildx setup step an id to reference its outputs
        uses: docker/setup-buildx-action@v3
        # Buildx is a Docker CLI plugin for advanced build capabilities.

      - name: Log in to GitHub Container Registry
        # This step logs in to GHCR. It only runs on pushes to 'main' or on tag pushes.
        # It does not run for pull requests or other branches to avoid publishing test images.
        if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))) || github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # github.repository_owner is the organization or user that owns the repository.
          username: ${{ github.repository_owner }}
          # GITHUB_TOKEN is a special token provided by Actions that has permissions to push to GHCR for this repo.
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Image Tags
        id: meta 
        uses: docker/metadata-action@v5
        with:
          # A list of images to generate metadata for. We use the matrix image name.
          # The image name on GHCR will be ghcr.io/OWNER/IMAGE_NAME.
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image.name }}
          tags: |
            # Generates a 'latest' tag for pushes to the main branch.
            type=raw,value=latest,enable={{is_default_branch}}
            # Generates a tag based on the Git SHA (e.g., ghcr.io/owner/image:sha-7d6a5f0)
            type=sha
            # Generates a tag from the Git tag if this is a tag event (e.g., ghcr.io/owner/image:v1.0.0)
            type=ref,event=tag

      - name: Build and push Docker image for ${{ matrix.image.name }}
        id: build_and_push # Give this step an id
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm64
          build-args: ${{ matrix.image.build_args }}
          # Use the tags and labels generated by the metadata-action.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Enable build cache for faster builds using GitHub cache.
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Use the buildx builder instance.
          builder: ${{ steps.buildx.outputs.name }}

      - name: Image digest
        # This step runs only if the image was pushed (i.e., not a pull request build).
        if: steps.build_and_push.outputs.digest && ((github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))) || github.event_name == 'workflow_dispatch')
        run: |
            echo "Image digest for ghcr.io/${{ github.repository_owner }}/${{ matrix.image.name }}: ${{ steps.build_and_push.outputs.digest }}"

